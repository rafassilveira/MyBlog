{"version":3,"sources":["webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["PostItemLink","styled","Link","PostItemWrapper","section","PostItemTag","div","props","background","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","PaginationWrapper","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","query","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","node","frontmatter","fields"],"mappings":"2KAGaA,EAAeC,YAAOC,QAAV,2EAAGD,CAAH,6EASZE,EAAkBF,IAAOG,QAAV,8EAAGH,CAAH,mGAQfI,EAAcJ,IAAOK,IAAV,0EAAGL,CAAH,kMAER,SAAAM,GAAK,OAAIA,EAAMC,WAAaD,EAAMC,WAAW,aAYhDC,EAAeR,IAAOK,IAAV,2EAAGL,CAAH,4DAMZS,EAAeT,IAAOU,KAAV,2EAAGV,CAAH,uBAIZW,EAAgBX,IAAOY,GAAV,4EAAGZ,CAAH,8DAMba,EAAsBb,IAAOc,EAAV,kFAAGd,CAAH,uDCVjBe,EAnCE,SAAC,GAAD,IACbC,EADa,EACbA,KACAT,EAFa,EAEbA,WACAU,EAHa,EAGbA,SACAC,EAJa,EAIbA,KACAC,EALa,EAKbA,WACAC,EANa,EAMbA,MACAC,EAPa,EAObA,YAPa,OASf,kBAAC,EAAD,CAAgBC,GAAKN,GACnB,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAeT,WAAYA,GAAaU,GACtC,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAiBC,EAAjB,IAAwBC,EAAxB,OACA,kBAAC,EAAD,KACGC,GAEH,kBAAC,EAAD,KACGC,OCrBEE,EAAoBvB,IAAOG,QAAV,4EAAGH,CAAH,sNC6BfwB,EAzBG,SAAC,GAAD,IAChBC,EADgB,EAChBA,QACAC,EAFgB,EAEhBA,OACAC,EAHgB,EAGhBA,YACAC,EAJgB,EAIhBA,SACAC,EALgB,EAKhBA,SACAC,EANgB,EAMhBA,SANgB,OAQhB,kBAAC,EAAD,MACIL,GAAW,kBAAC,OAAD,CAAMH,GAAMO,GAAZ,qBACb,2BACGF,EADH,OACoBC,IAElBF,GAAU,kBAAC,OAAD,CAAMJ,GAAIQ,GAAV,sBCnBhB,sCASA,IA8CeC,EAAK,YA+BLC,UA7EE,SAAA1B,GACf,IAAM2B,EAAW3B,EAAM4B,KAAKC,kBAAkBC,MADtB,EAMpB9B,EAAM+B,YAFRV,EAJsB,EAItBA,YACAC,EALsB,EAKtBA,SAEIH,EAA0B,IAAhBE,EACVD,EAASC,IAAgBC,EACzBC,EAAWF,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEG,EAAQ,UAAYH,EAAc,GAEtC,OACE,kBAACW,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKlB,MAAM,SACVa,EAASM,KAAI,oBACZC,KADY,IAEVC,YAAclC,EAFJ,EAEIA,WAAYU,EAFhB,EAEgBA,SAASC,EAFzB,EAEyBA,KAAKG,EAF9B,EAE8BA,YAAYD,EAF1C,EAE0CA,MACpDD,EAHU,EAGVA,WACQH,EAJE,EAIV0B,OAAQ1B,KAJE,OAOZ,kBAAC,EAAD,CACAA,KAAOA,EACPT,WAAaA,EACbU,SAAYA,EACZC,KAAQA,EACRC,WAAcA,EACdC,MAASA,EACTC,YAAcA,OAIlB,kBAAC,EAAD,CACCI,QAASA,EACRC,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA","file":"component---src-templates-blog-list-js-321f1f00b33b4b27147a.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const PostItemLink = styled(Link)`\r\n  color: #8899a6;\r\n  display: flex;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #1fa1f2;\r\n  }\r\n`\r\n\r\nexport const PostItemWrapper = styled.section `\r\n  align-items: center;\r\n  border-bottom: 1px solid #38444d;\r\n  display: flex;\r\n  padding: 2rem 3rem;\r\n  width: 100%;\r\n`\r\n\r\nexport const PostItemTag = styled.div `\r\n  align-items: center;\r\n  background: ${props => props.background ? props.background:\"#1fa1f2\"};\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n  justify-content: center;\r\n  min-height: 90px;\r\n  min-width: 90px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const PostItemInfo = styled.div `\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 1.5rem;\r\n`\r\n\r\nexport const PostItemDate = styled.time `\r\n  font-size: 0.9rem;\r\n`\r\n\r\nexport const PostItemTitle = styled.h1 `\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  margin: 0.2rem 0 0.5rem;\r\n`\r\n\r\nexport const PostItemDescription = styled.p `\r\n  font-size: 1.2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n`\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport * as S from './styled'\r\n\r\nconst PostItem = ({\r\n    slug,\r\n    background,\r\n    category,\r\n    date,\r\n    timeToRead,\r\n    title,\r\n    description,\r\n  }) => (\r\n  <S.PostItemLink to ={slug}>\r\n    <S.PostItemWrapper>\r\n    <S.PostItemTag background={background}>{category}</S.PostItemTag>\r\n      <S.PostItemInfo>\r\n        <S.PostItemDate>{date}•{timeToRead}min</S.PostItemDate>\r\n        <S.PostItemTitle>\r\n          {title}\r\n        </S.PostItemTitle>\r\n        <S.PostItemDescription>\r\n          {description}\r\n        </S.PostItemDescription>\r\n      </S.PostItemInfo>\r\n    </S.PostItemWrapper>\r\n  </S.PostItemLink>\r\n  \r\n)\r\n\r\nPostItem.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  background: PropTypes.string,\r\n  category: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\nexport default PostItem","import styled from 'styled-components'\r\n\r\nexport const PaginationWrapper = styled.section`\r\n  align-items: center;\r\n  border-top: 1px solid #38444d;\r\n  color: #8899a6;\r\n  display: flex;\r\n  padding: 1.5rem 3rem;\r\n  justify-content: space-between;\r\n  a {\r\n    color: #8899a6;\r\n    text-decoration: none;\r\n    transition: color 0.5s;\r\n    &:hover {\r\n      color: #1fa1f2;\r\n    }\r\n  }\r\n`","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst Pagination =({\r\n  isFirst,\r\n  isLast,\r\n  currentPage,\r\n  numPages,\r\n  prevPage,\r\n  nextPage\r\n})=>(\r\n  <S.PaginationWrapper>\r\n    {!isFirst && <Link to = {prevPage}>← página anterior</Link>}\r\n    <p>\r\n      {currentPage} de {numPages}\r\n    </p>\r\n    {!isLast && <Link to={nextPage}>próxima página →</Link>}\r\n  </S.PaginationWrapper>\r\n)\r\nPagination.propTypes={\r\n  isFirst:propTypes.bool.isRequired,\r\n  isLast:propTypes.bool.isRequired,\r\n  currentPage:propTypes.number.isRequired,\r\n  numPages:propTypes.number.isRequired,\r\n  prevPage:propTypes.string,\r\n  nextPage:propTypes.string\r\n}\r\n\r\nexport default Pagination","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostItem from \"../components/PostItem\"\r\nimport Pagination from '../components/Pagination'\r\n  \r\n\r\nconst BlogList = props => {\r\n  const postList = props.data.allMarkdownRemark.edges\r\n  \r\n  const {\r\n    currentPage,\r\n    numPages\r\n  } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`\r\n  const nextPage = `/page/${currentPage + 1}`\r\n  \r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Home\"/>  \r\n        {postList.map(({\r\n          node:{\r\n            frontmatter:{ background, category,date,description,title},\r\n            timeToRead,\r\n            fields:{slug},\r\n          },\r\n        })=> (\r\n          <PostItem\r\n          slug ={slug}\r\n          background= {background}       \r\n          category = {category}\r\n          date = {date}\r\n          timeToRead = {timeToRead}\r\n          title = {title}\r\n          description ={description}\r\n          />\r\n\r\n        ))}\r\n      <Pagination \r\n       isFirst={isFirst}\r\n        isLast={isLast}\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}/>\r\n      </Layout> \r\n    )\r\n  }\r\n\r\n\r\n\r\n  export const query = graphql`\r\n  query PostList($skip:Int!, $limit:Int!) {\r\n    allMarkdownRemark(\r\n      sort: {\r\n      fields: frontmatter___date,order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n      ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            background\r\n            category\r\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n            description\r\n            title\r\n          }\r\n          timeToRead\r\n        }\r\n      }\r\n    }\r\n  }\r\n    \r\n\r\n  `\r\n\r\n\r\n\r\nexport default BlogList"],"sourceRoot":""}